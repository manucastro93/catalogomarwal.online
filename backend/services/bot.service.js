import axios from 'axios';
import { obtenerProductosRelacionadosPorTexto } from '../controllers/producto.controller.js';
import { enviarMensajeTextoLibreWhatsapp } from '../helpers/enviarMensajeWhatsapp.js';
import { enviarMensajeImagenWhatsapp } from '../helpers/enviarMensajeImagenWhatsapp.js';
import { ConversacionBot } from '../models/index.js';

const OPENAI_KEY = process.env.OPENAI_API_KEY;
const OPENAI_MODEL = process.env.OPENAI_MODEL || 'gpt-4o';

export const procesarMensaje = async (mensajeTexto, numeroCliente) => {
  const productosRelacionados = await obtenerProductosRelacionadosPorTexto(mensajeTexto, 3);

  // 1Ô∏è‚É£ Enviar productos con imagen
  for (const p of productosRelacionados.slice(0, 3)) {
    const imagen = p.Imagenes?.[0]?.url || null;
    const link = `https://www.catalogomarwal.online/producto/${p.slug || p.id}`;
    if (imagen) {
      await enviarMensajeImagenWhatsapp(numeroCliente, {
        imagen,
        texto: `${p.nombre}\n$${p.precioUnitario}\n\nüî• Ver m√°s: ${link}`,
      });
    }
  }

  // 2Ô∏è‚É£ Generar respuesta con OpenAI
  const prompt = generarPrompt(mensajeTexto, productosRelacionados);
  const respuesta = await consultarOpenAI(prompt);

  // 3Ô∏è‚É£ Enviar mensaje final del bot (siempre)
  await enviarMensajeTextoLibreWhatsapp(numeroCliente, respuesta);

  // 4Ô∏è‚É£ Registrar conversaci√≥n
  await ConversacionBot.create({
    telefono: numeroCliente,
    mensajeCliente: mensajeTexto,
    respuestaBot: respuesta,
    derivar: productosRelacionados.length === 0,
  });

  return respuesta;
};

function generarPrompt(mensajeUsuario, productos) {
  let prompt = `Sos un vendedor real de una tienda online. Respond√©s con naturalidad, como alguien que atiende por WhatsApp todos los d√≠as. No habl√°s como bot ni us√°s frases de manual. Tu tono es cordial, relajado y profesional. Siempre intent√°s ayudar, segu√≠s el inter√©s del cliente y le ofrec√©s opciones si hay. Si no hay, lo dec√≠s sin vueltas pero con buena onda. No exageres, no uses tantos emojis ni signos. Si el cliente usa cierto vocabulario o tono, trat√° de seguirle la onda.`;

  prompt += `\n\nEl cliente escribi√≥: "${mensajeUsuario}".`;

  if (productos.length > 0) {
    const listado = productos.map(p => `- ${p.nombre} ($${p.precioUnitario})`).join('\n');
    prompt += `\n\nEstos son productos que podr√≠an interesarle:\n${listado}\nPod√©s mencionar alguno si encaja. Respond√© como si fuera una charla normal con un cliente por WhatsApp.`;
  } else {
    prompt += `\n\nNo hay coincidencias exactas, pero pod√©s ofrecer ayuda o decir que alguien del equipo se puede contactar.`;
  }

  return prompt;
}

async function consultarOpenAI(prompt) {
  const res = await axios.post(
    'https://api.openai.com/v1/chat/completions',
    {
      model: OPENAI_MODEL,
      messages: [{ role: 'user', content: prompt }],
      temperature: 0.8,
    },
    {
      headers: {
        Authorization: `Bearer ${OPENAI_KEY}`,
        'Content-Type': 'application/json',
      },
    }
  );

  return res.data.choices?.[0]?.message?.content?.trim() || 'Estoy para ayudarte, ¬øqu√© est√°s buscando?';
}
